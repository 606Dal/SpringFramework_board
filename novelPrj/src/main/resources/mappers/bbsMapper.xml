<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.spring.dao.BbsDAO">
  <!-- id = BbsDAO의 메서드 이름 -->
  <insert id="insert">
  	insert into tbl_board (subject, content, writer)
  	values (#{subject}, #{content}, #{writer})
  </insert>
  <!-- 컬럼명이 VO설정과 같으면 resultType -->
  <!-- <select id="read" resultType="com.spring.vo.BbsVO"> 
  	 mybatis-config.xml에서 지정 후 간단히 변경 가능-->
  <select id="read" resultType="BbsVO">
  	select
  		bid, subject, content,  writer, regdate, hit
  	from
  		tbl_board
  	where bid=#{bid}
  </select>
  
  <update id="update">
  	update tbl_board set subject=#{subject}, content=#{content}
  	where bid=#{bid}
  </update>
  
  <delete id="delete">
  	delete from tbl_board where bid=#{bid}
  </delete>
  
  <select id="list" resultType="BbsVO">
  <!-- xml문법. 중간에 부등호가 태그로 인식 될 수도 있어서 CDATA 사용-->
  <![CDATA[
	  	select
	  		bid, subject, content,  writer, regdate, hit
	  	from
	  		tbl_board
	  	where bid > 0
	  	order by bid desc, regdate desc
  	]]>
  </select>
  <!-- 임시로 사용 -->
  <select id="listPage" resultType="BbsVO">
  <![CDATA[
	  	select
	  		bid, subject, content,  writer, regdate, hit
	  	from
	  		tbl_board
	  	where bid > 0
	  	order by bid desc, regdate desc
	  	limit #{page}, 10
  	]]>
  </select>
  <!-- 페이지 당 글 개수 선택 가능 기능
  //#{startPage} = PageCriteria에서 getStartPage()를 호출하는 것과 같음  -->
  <select id="listCriteria" resultType="BbsVO">
  <![CDATA[
	  	select
	  		bid, subject, content,  writer, regdate, hit
	  	from
	  		tbl_board
	  	where bid > 0
	  	order by bid desc, regdate desc
	  	limit #{startPage}, #{numPerPage}
  	]]>
  </select>
  
  <select id="countData" resultType="int">
  <![CDATA[
	  	select count(bid)
	  	from
	  		tbl_board
	  	where bid > 0
  	]]>
  </select>
  
  <!-- MyBatis에서 제공하는 <include>, <sql> 중복되는 내용 처리 가능. -->
  <!-- 1. sql로 문장 정의 -->
  <sql id = "findSQL">
  <if test="findType != null">
  		<if test="findType == 'S'.toString()">
  			and subject like CONCAT('%', #{keyword}, '%')
  		</if>
  		<if test="findType == 'C'.toString()">
  			and content like CONCAT('%', #{keyword}, '%')
  		</if>
  		<if test="findType == 'W'.toString()">
  			and writer like CONCAT('%', #{keyword}, '%')
  		</if>
  		<if test="findType == 'SC'.toString()">
  			and (subject like CONCAT('%', #{keyword}, '%')
  				 or content like CONCAT('%', #{keyword}, '%'))
  		</if>
  		<if test="findType == 'CW'.toString()">
  			and (content like CONCAT('%', #{keyword}, '%')
  				 or writer like CONCAT('%', #{keyword}, '%'))
  		</if>
  		<if test="findType == 'SCW'.toString()">
  			and (subject like CONCAT('%', #{keyword}, '%')
  				 or content like CONCAT('%', #{keyword}, '%') 
  				 or writer like CONCAT('%', #{keyword}, '%'))
  		</if>
  	</if>
  </sql>
  <!-- 검색 기능 - 마이바티스 표현식을 이용해 검색 조건 설정 -->
  <select id="listFind" resultType="BbsVO">
  <![CDATA[
	  	select * from tbl_board
	  	where bid > 0
  ]]> <!-- 표현식 부분은 CDATA 끊어주는 게 좋음  -->
  	<!-- 2.include 사용. refid: 참고하는 id -->
	  	<include refid="findSQL"></include>
  <![CDATA[  	
	  	order by bid desc
	  	limit #{startPage}, #{numPerPage}
  ]]>
  </select>
  <!-- 검색된 글의 총 개수 -->
  <select id="findCountData" resultType="int">
  <![CDATA[
	  	select count(bid)
	  	from tbl_board
	  	where bid > 0
  ]]>
	  	<include refid="findSQL"></include>
  </select>
  
  
</mapper>